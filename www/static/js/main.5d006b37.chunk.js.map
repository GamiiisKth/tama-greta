{"version":3,"sources":["Bicycle.jpg","Hiking.jpg","Skiing.jpg","Automobile, Car.jpg","Aircraft_Airplane.jpg","Steak.jpg","serviceWorker.js","TextMobileStepper.js","App.js","ProgresStatus.js","Login.js","PersonProgress.js","Review.js","Main.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","tutorialSteps","label","imgPath","TextMobileStepper","state","activeStep","handleNext","setState","prevState","handleBack","this","props","classes","theme","maxSteps","length","className","root","Paper","square","elevation","header","Typography","img","src","alt","MobileStepper","steps","position","mobileStepper","nextButton","Button","size","onClick","disabled","direction","backButton","React","Component","withStyles","maxWidth","flexGrow","display","alignItems","height","paddingLeft","spacing","unit","backgroundColor","palette","background","default","width","overflow","withTheme","grow","menuButton","marginLeft","marginRight","AppBar","Toolbar","IconButton","color","aria-label","variant","href","style","float","makeStyles","button","marginTop","actionsContainer","marginBottom","resetContainer","padding","Login","progress","latestMessage","response","top","left","PersonStatus","handleMessage","activityMessage","activity","console","log","progvalue","sittingActivityValue","sittingActivityComplete","walkingActivityValue","wal","walkingActivityComplete","url","topics","onMessage","message","LinearProgress","value","valueBuffer","bicycle","require","hiking","skiing","useStyles","flexWrap","justifyContent","gridList","tileData","title","author","cols","Review","sum","xhr","XMLHttpRequest","addEventListener","JSON","parse","responseText","open","setRequestHeader","send","Object","entries","key","score","PK","scoreValue","GridList","cellHeight","GridListTile","ListSubheader","component","map","tile","GridListTileBar","subtitle","actionIcon","icon","e","Main","path","App","name","from","to","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5d006b37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bicycle.6b764683.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Hiking.12a4ad9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Skiing.0c67bfdd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Automobile, Car.f60ca4b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Aircraft_Airplane.d2d99c9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Steak.a270061e.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst tutorialSteps = [\n\t{\n\t\tlabel: 'San Francisco – Oakland Bay Bridge, United States',\n\t\timgPath:\n\t\t\t'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\n\t},\n\t{\n\t\tlabel: 'Bird',\n\t\timgPath:\n\t\t\t'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\n\t},\n\t{\n\t\tlabel: 'Bali, Indonesia',\n\t\timgPath:\n\t\t\t'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\n\t},\n\t{\n\t\tlabel: 'NeONBRAND Digital Marketing, Las Vegas, United States',\n\t\timgPath:\n\t\t\t'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\n\t},\n\t{\n\t\tlabel: 'Goč, Serbia',\n\t\timgPath:\n\t\t\t'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\n\t},\n];\n\nconst styles = theme => ({\n\troot: {\n\t\tmaxWidth: 2000,\n\t\tflexGrow: 1,\n\t},\n\theader: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\theight: 50,\n\t\tpaddingLeft: theme.spacing.unit * 4,\n\t\tbackgroundColor: theme.palette.background.default,\n\t},\n\timg: {\n\t\theight: 700,\n\t\twidth: 1600,\n\t\tmaxWidth: 2000,\n\t\toverflow: 'hidden',\n\t\tdisplay: 'block',\n\t},\n});\n\nclass TextMobileStepper extends React.Component {\n\tstate = {\n\t\tactiveStep: 0,\n\t};\n\n\thandleNext = () => {\n\t\tthis.setState(prevState => ({\n\t\t\tactiveStep: prevState.activeStep + 1,\n\t\t}));\n\t};\n\n\thandleBack = () => {\n\t\tthis.setState(prevState => ({\n\t\t\tactiveStep: prevState.activeStep - 1,\n\t\t}));\n\t};\n\n\trender() {\n\t\tconst {classes, theme} = this.props;\n\t\tconst {activeStep} = this.state;\n\t\tconst maxSteps = tutorialSteps.length;\n\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<Paper square elevation={0} className={classes.header}>\n\t\t\t\t\t<Typography>{tutorialSteps[activeStep].label}</Typography>\n\t\t\t\t</Paper>\n\t\t\t\t<img\n\t\t\t\t\tclassName={classes.img}\n\t\t\t\t\tsrc={tutorialSteps[activeStep].imgPath}\n\t\t\t\t\talt={tutorialSteps[activeStep].label}\n\t\t\t\t/>\n\t\t\t\t<MobileStepper\n\t\t\t\t\tsteps={maxSteps}\n\t\t\t\t\tposition=\"static\"\n\t\t\t\t\tactiveStep={activeStep}\n\t\t\t\t\tclassName={classes.mobileStepper}\n\t\t\t\t\tnextButton={\n\t\t\t\t\t\t<Button size=\"small\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t{theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t}\n\t\t\t\t\tbackButton={\n\t\t\t\t\t\t<Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\n\t\t\t\t\t\t\t{theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\n\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTextMobileStepper.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n\ttheme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, {withTheme: true})(TextMobileStepper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TextMobileStepper from \"./TextMobileStepper\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = {\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tmarginLeft: -12,\n\t\tmarginRight: 20,\n\t},\n};\n\nfunction App(props) {\n\tconst {classes} = props;\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n\t\t\t\t\t\t<MenuIcon/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n\t\t\t\t\t\tNews\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button color=\"white\" href=\"/login\">Login</Button>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\n\t\t\t<div style={{float: \"right\"}}>\n\t\t\t\t< TextMobileStepper/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nApp.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tbutton: {\n\t\tmarginTop: theme.spacing(1),\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tactionsContainer: {\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\tresetContainer: {\n\t\tpadding: theme.spacing(3),\n\t},\n}));\n\nfunction getSteps() {\n\treturn ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n\tswitch (step) {\n\t\tcase 0:\n\t\t\treturn `Please login to your account`;\n\t\tcase 1:\n\t\t\treturn 'An ad group contains one or more ads which target a shared set of keywords.';\n\t\tcase 2:\n\t\t\treturn `Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.`;\n\t\tdefault:\n\t\t\treturn 'Unknown step';\n\t}\n}\n\nexport default function VerticalLinearStepper(props) {\n\n\n\tconst classes = useStyles();\n\tconst [activeStep, setActiveStep] = React.useState(0);\n\tconst steps = getSteps();\n\n\tconst handleNext = () => {\n\t\tsetActiveStep(props.progress);\n\t};\n\n\tconst handleBack = () => {\n\t\tsetActiveStep(props.progress);\n\t};\n\n\tconst handleReset = () => {\n\t\tsetActiveStep(0);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Stepper activeStep={activeStep} orientation=\"vertical\">\n\t\t\t\t{steps.map((label, index) => (\n\t\t\t\t\t<Step key={label}>\n\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t\t\t\t<StepContent>\n\t\t\t\t\t\t\t<Typography>{getStepContent(index)}</Typography>\n\t\t\t\t\t\t\t<div className={classes.actionsContainer}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tdisabled={activeStep === 0}\n\t\t\t\t\t\t\t\t\t\tonClick={handleBack}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tonClick={handleNext}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</StepContent>\n\t\t\t\t\t</Step>\n\t\t\t\t))}\n\t\t\t</Stepper>\n\t\t\t{activeStep === steps.length && (\n\t\t\t\t<Paper square elevation={0} className={classes.resetContainer}>\n\t\t\t\t\t<Typography>All steps completed - you&apos;re finished</Typography>\n\t\t\t\t\t<Button onClick={handleReset} className={classes.button}>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</Button>\n\t\t\t\t</Paper>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ProgresStatus from \"./ProgresStatus\";\n\n\nconst httpGet = () => {\n\tvar xmlHttp = new XMLHttpRequest();\n\txmlHttp.open(\"GET\", \"https://kx5wy0we8c.execute-api.eu-central-1.amazonaws.com/dev/image-labels\", false); // false for synchronous request\n\txmlHttp.send(null);\n\tconsole.log(xmlHttp.responseText);\n\treturn xmlHttp.responseText;\n}\n\nexport default class Login extends React.Component {\n\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprogress: 0,\n\t\t\tlatestMessage: null,\n\t\t\tresponse: \"\"\n\t\t}\n\t}\n\n\n\trender() {\n\t\treturn (\n\n\n\t\t\t<div style={{width: \"100%\", height: \"100%\"}}>\n\n\t\t\t\t<Button style={{\n\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\theight: \"100px\",\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\tbackgroundColor: \"blue\",\n\t\t\t\t\ttop: \"40%\",\n\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\tmarginTop: \" -100px\",\n\t\t\t\t\tmarginLeft: \"-100px\"\n\t\t\t\t}} href=\"/review\" variant=\"contained\" color=\"primary\">\n\t\t\t\t\tINSTAGRAM\n\t\t\t\t</Button>\n\t\t\t\t<Button style={{\n\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\theight: \"100px\",\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\tbackgroundColor: \"blue\",\n\t\t\t\t\ttop: \"60%\",\n\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\tmarginTop: \" -100px\",\n\t\t\t\t\tmarginLeft: \"-100px\"\n\t\t\t\t}} variant=\"contained\" color=\"primary\">\n\t\t\t\t\tTWITTER\n\t\t\t\t</Button>\n\n\t\t\t</div>\n\n\t\t)\n\n\n\t}\n\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport SockJsClient from 'react-stomp'\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\twidth: '100%',\n\t\t'& > * + *': {\n\t\t\tmarginTop: theme.spacing(4),\n\t\t},\n\t},\n}));\n\nexport default class PersonStatus extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tsittingActivityValue: 10,\n\t\t\tsittingActivityComplete: 0,\n\t\t\twalkingActivityValue: 10,\n\t\t\twalkingActivityComplete: 0,\n\n\n\t\t}\n\t}\n\n\n\thandleMessage = (activityMessage) => {\n\t\tlet {activity} = activityMessage;\n\t\tconsole.log(activity);\n\n\t\tif (activity === 'sitting') {\n\n\t\t\tlet progvalue = this.state.sittingActivityValue + 0.5;\n\n\t\t\tthis.setState({sittingActivityValue: progvalue})\n\t\t\tif (progvalue > 100.0) {\n\t\t\t\tthis.setState({sittingActivityComplete: 100})\n\t\t\t}\n\t\t\tconsole.log(this.state.sittingActivityValue);\n\t\t} else if (activity === 'walking') {\n\n\t\t\tlet progvalue = this.state.walkingActivityValue + 0.5;\n\n\t\t\tthis.setState({walkingActivityValue: progvalue})\n\t\t\tif (progvalue > 100.0) {\n\t\t\t\tthis.setState({wal: 100})\n\t\t\t}\n\t\t\tconsole.log(this.state.walkingActivityComplete);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{marginTop: \"10px\"}}>\n\t\t\t\t<SockJsClient\n\t\t\t\t\turl=\"http://169.50.8.253:8080/ws\"\n\t\t\t\t\ttopics={['/user/queue/notify']}\n\t\t\t\t\tonMessage={(message) => this.handleMessage(message)}/>\n\t\t\t\t<a>sitting</a>\n\t\t\t\t<LinearProgress variant=\"buffer\" value={this.state.sittingActivityComplete}\n\t\t\t\t\t\t\t\tvalueBuffer={this.state.sittingActivityValue}/>\n\t\t\t\t<div/>\n\t\t\t\t<a>walking</a>\n\t\t\t\t<LinearProgress variant=\"buffer\" value={this.state.walkingActivityComplete}\n\t\t\t\t\t\t\t\tvalueBuffer={this.state.walkingActivityValue} color=\"secondary\"/>\n\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\n\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Button from \"@material-ui/core/Button\";\n\nvar bicycle = require('./Bicycle.jpg');\nvar hiking = require('./Hiking.jpg');\nvar skiing = require('./Skiing.jpg');\nvar Automobile = require('./Automobile, Car.jpg');\nvar Aircraft_Airplane = require('./Aircraft_Airplane.jpg');\nvar Steak = require('./Steak.jpg');\n\nconst useStyles = {\n\troot: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t\tjustifyContent: 'space-around',\n\t\toverflow: 'hidden',\n\t},\n\tgridList: {\n\t\twidth: 600,\n\t\theight: 500,\n\t},\n}\nconst tileData = [\n\t{\n\t\timg: hiking,\n\t\ttitle: 'Image',\n\t\tauthor: 'author',\n\t\tcols: 2,\n\t}, {\n\t\timg: skiing,\n\t\ttitle: 'Image',\n\t\tauthor: 'author',\n\t\tcols: 2,\n\t}, {\n\t\timg: bicycle,\n\t\ttitle: 'Image',\n\t\tauthor: 'author',\n\t\tcols: 2,\n\t}\n];\n\nexport default class Review extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tresponse: \"\",\n\t\t\tsum: 30,\n\n\t\t}\n\n\t}\n\n\n\tcomponentDidMount() {\n\t//\tthis.getData();\n\t}\n\n\tgetData() {\n\t\t// create a new XMLHttpRequest\n\t\tvar xhr = new XMLHttpRequest()\n\n\t\t// get a callback when the server responds\n\t\txhr.addEventListener('load', () => {\n\t\t\t// update the state of the component with the result here\n\t\t\t//\tconsole.log(xhr.responseText)\n\t\t\t//\tconsole.log(JSON.parse(xhr.responseText)['Items'])\n\n\t\t\tthis.setState({response: JSON.parse(xhr.responseText)['Items']})\n\t\t})\n\t\t// open the request with the verb and the url\n\t\txhr.open('GET', 'https://kx5wy0we8c.execute-api.eu-central-1.amazonaws.com/dev/image-labels')\n\t\txhr.setRequestHeader('Accept', '*/*');\n\t\txhr.setRequestHeader('Content-Type', \"application/json\");\n\n\n\t\t// send the request\n\t\txhr.send()\n\n\t}\n\n\n\trender() {\n\n\n\t\t//const {score} = this.state.response[0];\n\n\t\t//console.log();\n\t\tfor (let [key, value] of Object.entries(this.state.response)) {\n\t\t\tconsole.log(`${key}: ${value.score}: ${value.PK}`);\n\t\t\tlet scoreValue=`${value.score}`;\n\t\t\tif (`${value.PK}` === 'Hiking.jpg' || `${value.PK}` === 'Skiing.jpg' || `${value.PK}` === 'Bicycle.jpg') {\n\n\t\t\t\tlet scoreValue=`${value.score}`;\n\n\t\t\t\tconsole.log(scoreValue)\n\t\t\t\tthis.setState({sum: scoreValue})\n\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={useStyles.root}>\n\t\t\t\t<GridList cellHeight={180} className={useStyles.gridList}>\n\t\t\t\t\t<GridListTile key=\"Subheader\" cols={2} style={{height: 'auto'}}>\n\t\t\t\t\t\t<ListSubheader component=\"div\">December</ListSubheader>\n\t\t\t\t\t</GridListTile>\n\t\t\t\t\t{tileData.map(tile => (\n\t\t\t\t\t\t<GridListTile key={tile.img}>\n\t\t\t\t\t\t\t<img src={tile.img} alt={tile.title}/>\n\t\t\t\t\t\t\t<GridListTileBar\n\t\t\t\t\t\t\t\ttitle={tile.title}\n\t\t\t\t\t\t\t\tsubtitle={<span>by: {tile.author}</span>}\n\t\t\t\t\t\t\t\tactionIcon={\n\t\t\t\t\t\t\t\t\t<IconButton aria-label={`info about ${tile.title}`} className={useStyles.icon}>\n\t\t\t\t\t\t\t\t\t\t<InfoIcon/>\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t))}\n\t\t\t\t</GridList>\n\n\t\t\t\t{this.state.sum}\n\n\n\t\t\t\t<Button style={{\n\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\theight: \"100px\",\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\tbackgroundColor: \"blue\",\n\t\t\t\t\ttop: \"80%\",\n\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\tmarginTop: \" -100px\",\n\t\t\t\t\tmarginLeft: \"-100px\"\n\t\t\t\t}} href=\"/status\" onClick={(e) => this.setState({progress: 1})} variant=\"contained\" color=\"primary\">\n\t\t\t\t\tFACEBOOK\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t)\n\t}\n\n}\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n */\n\n","import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport App from \"./App.js\";\nimport Login from \"./Login.js\";\nimport PersonStatus from \"./PersonProgress.js\";\nimport Review from \"./Review\";\n\n\nexport default class Main extends React.Component {\n\n\n\trender() {\n\n\t\treturn (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/main\" component={App}/>\n\t\t\t\t<Route name=\"login\" path=\"/login\" component={Login}/>\n\t\t\t\t<Route name=\"status\" path=\"/status\" component={PersonStatus}/>\n\t\t\t\t<Route name=\"review\" path=\"/review\" component={Review}/>\n\t\t\t\t<Redirect from=\"/\" to=\"/main\"/>\n\t\t\t</Switch>\n\n\t\t)\n\t}\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Main from \"./Main.js\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<Main/>\n\t</BrowserRouter>\n\t, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}